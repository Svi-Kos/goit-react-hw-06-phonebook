{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/actions.js","redux/contactsReducer.js","redux/store.js","redux/selectors.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","App.js","reportWebVitals.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","shortid","generate","deleteContact","changeFilter","itemsReducer","createReducer","actions","state","filter","contact","length","alert","filterReducer","_","contactsReducer","combineReducers","items","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","persistReducer","devTools","process","STORE","persistor","persistStore","getFilter","getVisibleContacts","allContacts","getContacts","normalizedFilter","toLowerCase","includes","ContactList","useSelector","dispatch","useDispatch","className","s","contactList","map","contactListItem","type","deleteBtn","onClick","ContactForm","useState","setName","setNumber","handleChange","event","currentTarget","value","reset","onSubmit","preventDefault","contactForm","contactFormLabel","required","onChange","pattern","numberFormat","contactFormBtn","Filter","target","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.b6191eea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1PSyE\",\"contactListItem\":\"ContactList_contactListItem__1Dn1r\",\"deleteBtn\":\"ContactList_deleteBtn__2Z1EQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3-pXR\"};","import { createAction } from '@reduxjs/toolkit';\n// import * as actionTypes from 'redux/types';\nimport shortid from 'shortid';\n\nexport const addContact = createAction(\n  'phonebook/addContact',\n  (name, number) => ({\n    payload: {\n      id: shortid.generate(),\n      name,\n      number,\n    },\n  }),\n);\n\nexport const deleteContact = createAction('phonebook/deleteContact');\n\nexport const changeFilter = createAction('phonebook/changeFilter');\n\n// export const addContact = (name, number) => ({\n//   type: actionTypes.ADD,\n// payload: {\n//   id: shortid.generate(),\n//   name,\n//   number,\n// },\n// });\n\n// export const deleteContact = contactId => ({\n//   type: actionTypes.DELETE,\n//   payload: contactId,\n// });\n// export const changeFilter = value => ({\n//   type: actionTypes.FILTER,\n//   payload: value,\n// });\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n// import * as actionTypes from 'redux/types';\nimport * as actions from 'redux/actions';\n\nconst itemsReducer = createReducer([], {\n  [actions.addContact]: (state, { payload }) => {\n    const uniqName = state.filter(contact => payload.name === contact.name);\n    return uniqName.length !== 1\n      ? [...state, payload]\n      : [...state] && alert(`${payload.name} is already in contacts`);\n  },\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filterReducer = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nconst contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n\nexport default contactsReducer;\n\n// const itemsReducer = (\n//   state = testContacts,\n//   { type, payload },\n// ) => {\n//   switch (type) {\n//     case actionTypes.ADD:\n//       console.log('addContact');\n//       const uniqName = state.filter(contact => payload.name === contact.name);\n//       return uniqName.length !== 1 ? [...state, payload] : [...state];\n\n//     case actionTypes.DELETE:\n//       console.log('deleteContact');\n//       return state.filter(({ id }) => id !== payload);\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const filterReducer = (state = '', { type, payload }) => {\n//   switch (type) {\n//     case actionTypes.FILTER:\n//       console.log('changeFilter');\n//       return payload;\n\n//     default:\n//       return state;\n//   }\n// };\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from 'redux/contactsReducer';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nconst STORE = { store, persistor };\n\nexport default STORE;\n","export const getContacts = state => state.contacts.items;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = state => {\n  const allContacts = getContacts(state);\n  const filter = getFilter(state);\n\n  const normalizedFilter = filter.toLowerCase();\n\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as actions from 'redux/actions';\nimport { getVisibleContacts } from 'redux/selectors';\nimport s from './ContactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <ul className={s.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.contactListItem}>\n          <p>\n            {name}: {number}\n          </p>\n          <button\n            type=\"button\"\n            className={s.deleteBtn}\n            onClick={() => dispatch(actions.deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\n// const getVisibleContacts = (allContacts, filter) => {\n//   const normalizedFilter = filter.toLowerCase();\n\n//   return allContacts.filter(contact =>\n//     contact.name.toLowerCase().includes(normalizedFilter),\n//   );\n// };\n\n// const mapStateToProps = ({ contacts: { items, filter } }) => ({\n//   contacts: getVisibleContacts(items, filter),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   onDeleteItem: id => dispatch(actions.deleteContact(id)),\n// });\n\nexport default ContactList;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as actions from 'redux/actions';\nimport s from '../ContactForm/ContactForm.module.css';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(actions.addContact(name, number));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.contactForm}>\n      <label className={s.contactFormLabel}>\n        Name\n        <input\n          type=\"text\"\n          required\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.contactFormLabel}>\n        Number\n        <input\n          type=\"tel\"\n          pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n          required\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n        />\n        <p className={s.numberFormat}>Format: xxx-xx-xx</p>\n      </label>\n      <button type=\"submit\" className={s.contactFormBtn}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\n// const mapDispatchToProps = dispatch => ({\n//   onSubmit: (name, number) => dispatch(actions.addContact(name, number)),\n// });\n\nexport default ContactForm;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as actions from 'redux/actions';\nimport { getFilter } from 'redux/selectors';\nimport s from './Filter.module.css';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n    <label className={s.filter}>\n      Find contacts by name{' '}\n      <input\n        type=\"text\"\n        value={value}\n        onChange={event => dispatch(actions.changeFilter(event.target.value))}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n};\n\n// const mapStateToProps = state => ({\n//   value: state.contacts.filter,\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   onChange: event => dispatch(actions.changeFilter(event.target.value)),\n// });\n\nexport default Filter;\n","import React from 'react';\nimport './App.css';\nimport ContactList from './components/ContactList';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\n\nfunction App() {\n  return (\n    <div className=\"phonebook\">\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from 'redux/store';\n// import * as actions from 'redux/actions';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3F-nz\",\"contactFormLabel\":\"ContactForm_contactFormLabel__2sxFv\",\"contactFormBtn\":\"ContactForm_contactFormBtn__STraC\",\"numberFormat\":\"ContactForm_numberFormat__jRW_L\"};"],"sourceRoot":""}