{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","App.js","reportWebVitals.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactList","contacts","onDeleteItem","className","s","contactList","map","id","name","number","contactListItem","type","deleteBtn","onClick","ContactForm","onSubmit","useState","setName","setNumber","handleChange","event","currentTarget","value","reset","preventDefault","contactForm","contactFormLabel","required","onChange","pattern","numberFormat","contactFormBtn","Filter","filter","App","JSON","parse","localStorage","getItem","setContacts","setFilter","normalizedFilter","toLowerCase","visibleContacts","contact","includes","useEffect","window","setItem","stringify","shortid","generate","length","alert","contactId","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1627846.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3-pXR\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteItem }) => (\n  <ul className={s.contactList}>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id} className={s.contactListItem}>\n        <p>\n          {name}: {number}\n        </p>\n        <button\n          type=\"button\"\n          className={s.deleteBtn}\n          onClick={() => onDeleteItem(id)}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactList;\n","import { useState } from 'react';\nimport s from '../ContactForm/ContactForm.module.css';\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(name, number);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.contactForm}>\n      <label className={s.contactFormLabel}>\n        Name\n        <input\n          type=\"text\"\n          required\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.contactFormLabel}>\n        Number\n        <input\n          type=\"tel\"\n          pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n          required\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n        />\n        <p className={s.numberFormat}>Format: xxx-xx-xx</p>\n      </label>\n      <button type=\"submit\" className={s.contactFormBtn}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.filter}>\n    Find contacts by name{' '}\n    <input type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n};\n\nexport default Filter;\n","import { useState, useEffect } from 'react';\nimport shortid from 'shortid';\nimport './App.css';\nimport ContactList from './components/ContactList';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\n// import contacts from 'contacts.json';\n\nfunction App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(localStorage.getItem('contacts')) ?? [];\n  });\n  const [filter, setFilter] = useState('');\n\n  const normalizedFilter = filter.toLowerCase();\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n\n  const addContact = (name, number) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    const uniqName = contacts.filter(contact => name === contact.name);\n    uniqName.length !== 1\n      ? setContacts([contact, ...contacts])\n      : alert(`${name} is already in contacts`);\n  };\n\n  const deleteContact = contactId => {\n    setContacts(contacts.filter(contact => contact.id !== contactId));\n  };\n\n  const changeFilter = event => {\n    setFilter(event.currentTarget.value);\n  };\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <div className=\"phonebook\">\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList contacts={visibleContacts} onDeleteItem={deleteContact} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3F-nz\",\"contactFormLabel\":\"ContactForm_contactFormLabel__2sxFv\",\"contactFormBtn\":\"ContactForm_contactFormBtn__STraC\",\"numberFormat\":\"ContactForm_numberFormat__jRW_L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1PSyE\",\"contactListItem\":\"ContactList_contactListItem__1Dn1r\",\"deleteBtn\":\"ContactList_deleteBtn__2Z1EQ\"};"],"sourceRoot":""}